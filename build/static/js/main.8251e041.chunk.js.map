{"version":3,"sources":["Filter.js","Notification.js","PersonForm.js","Persons.js","server/backend.js","App.js","index.js"],"names":["Filter","searchState","handleFilter","name","value","onChange","Notification","message","error","className","PersonForm","handleSubmit","handleChange","newName","newNumber","onSubmit","type","Persons","filtered","persons","filteredName","deleteEntry","map","n","key","number","onClick","id","axios","get","newContact","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setSearchState","setFiltered","setMessage","setError","useEffect","contactService","then","response","data","personMatch","p","filter","toLowerCase","includes","addEntry","concat","catch","err","updateEntry","find","newEntry","style","display","flexDirection","e","target","preventDefault","window","confirm","newArr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8251e041.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Filter({ searchState, handleFilter }) {\n  return (\n    <div>\n      filter shown with\n      <input name='filtered' value={searchState} onChange={handleFilter} />\n    </div>\n  );\n}\n","import React from 'react';\nimport './Notification.css';\n\nexport default function Notification({ message, error }) {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={error ? 'error' : 'success'}>{message}</div>;\n}\n","import React from 'react';\n\nexport default function PersonForm({\n  handleSubmit,\n  handleChange,\n  newName,\n  newNumber,\n}) {\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          name: <input name='name' value={newName} onChange={handleChange} />\n          number:{' '}\n          <input name='number' value={newNumber} onChange={handleChange} />\n        </div>\n        <div>\n          <button type='submit'>add</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Persons({\n  filtered,\n  persons,\n  filteredName,\n  deleteEntry,\n}) {\n  return (\n    <div>\n      {!filtered ? (\n        persons.map((n) => (\n          <div key={n.name}>\n            <div>\n              {n.name} {n.number}\n            </div>\n            <button onClick={() => deleteEntry(n.id)}>Delete</button>\n          </div>\n        ))\n      ) : (\n        <div>\n          {filteredName.map((n) => (\n            <div key={n.name}>\n              <div>\n                {n.name} {n.number}\n              </div>\n              <button onClick={() => deleteEntry(n.id)}>Delete</button>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = '/api/persons';\n\nconst getAll = () => axios.get(`${BASE_URL}`);\n\nconst create = (newContact) => axios.post(`${BASE_URL}`, newContact);\n\nconst update = (newContact, id) => axios.put(`${BASE_URL}/${id}`, newContact);\n\nconst deleteContact = (id) => axios.delete(`${BASE_URL}/${id}`);\n\nexport default { getAll, create, update, deleteContact };\n","import React, { useState, useEffect } from 'react';\nimport Filter from './Filter';\nimport Notification from './Notification';\nimport PersonForm from './PersonForm';\nimport Persons from './Persons';\nimport contactService from './server/backend';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [searchState, setSearchState] = useState('');\n  const [filtered, setFiltered] = useState(false);\n  const [message, setMessage] = useState(null);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    contactService.getAll().then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    e.target.name === 'name'\n      ? setNewName(e.target.value)\n      : setNewNumber(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!persons.find(personMatch)) {\n      addEntry();\n      setError(false);\n      setMessage('New Contact Added');\n    } else {\n      if (window.confirm(`${newName} is already added to phonebook`)) {\n        setError(false);\n        setMessage('Number Updated');\n        return updateEntry();\n      } else {\n        setNewName('');\n        setNewNumber('');\n      }\n    }\n  };\n\n  const handleFilter = (e) => {\n    setFiltered(true);\n    setSearchState(e.target.value);\n  };\n\n  const personMatch = (p) => {\n    return p.name === newName;\n  };\n\n  const filteredName = persons.filter((n) =>\n    n.name.toLowerCase().includes(searchState.toLowerCase())\n  );\n\n  const addEntry = () => {\n    let newEntry = { name: newName, number: newNumber };\n    contactService\n      .create(newEntry)\n      .then((response) => {\n        setPersons(persons.concat(response.data));\n      })\n      .catch((err) => {\n        setMessage(err.response.data.error);\n        setError(true);\n      });\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const updateEntry = () => {\n    const newContact = persons.find(personMatch);\n    const newEntry = { ...newContact, number: newNumber };\n    contactService\n      .update(newEntry, newEntry.id)\n      .then((response) => {\n        setPersons(persons.map((p) => (p.id !== newEntry.id ? p : newEntry)));\n      })\n      .catch((error) => {\n        setMessage(\n          `The contact '${newEntry.name}' was already deleted from server`\n        );\n        setPersons(persons.filter((n) => n.id !== newEntry.id));\n        setError(true);\n      });\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const deleteEntry = (id) => {\n    const newArr = [...persons];\n    contactService.deleteContact(id).then((response) => {\n      setPersons(newArr.filter((p) => p.id !== id));\n    });\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <h2>Phonebook</h2>\n      <Notification message={message} error={error} />\n      <Filter searchState={searchState} handleFilter={handleFilter} />\n\n      <h3>Add a new contact</h3>\n\n      <PersonForm\n        handleSubmit={handleSubmit}\n        newName={newName}\n        newNumber={newNumber}\n        handleChange={handleChange}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons\n        filtered={filtered}\n        persons={persons}\n        filteredName={filteredName}\n        deleteEntry={deleteEntry}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}